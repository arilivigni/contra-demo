
run_cleanup: true
run_prereqs: false
setup_containers: true
setup_pipelines: true
setup_sample_project: false
force_repo_clone: true
modify_scc: false


# Set to false if deploying to an Enterprise Cluster
setup_minishift: true
profile: minishift

# default minishift version to install
minishift_version: "v1.26.0"

# default openshift version to install
oc_version: "v3.11.0"

# OpenShift user. update if deploying to an Enterprise Cluster
username: "developer"
# OpenShift password. update if deploying to an Enterprise Cluster
password: "developer"


# don't install helper containers ansible-executor and linchpin-executor
os_template_blacklist:
  - ansible-executor
  - linchpin-executor

# Name of project and description
openshift_project: "devconfcz-demo"
openshift_project_display_name: "devconfcz 2019 demo"

# Leave empty for OpenShift. Set when deploying an Enterprise Cluster
openshift_cluster_ip: ""
# Repository of deconfcz-demo project
project_repo: "https://github.com/arilivigni/devconfcz-demo"
# update if pointing to a development branch
project_branch: "master"

# These 2 values are for the size of the VM created for minishift.
# These settings should be large enough to have a CPAAS master Jenkins,
# a product Jenkins, and a product sandbox spun up in minishift.
memory: "8192mb"
cpus: "4"


# Setup of influxDB, grafana, and
influxdb_admin_password: admin
influxdb_admin_user: admin
influxdb_api_route: influxdb.contra-env-infra.svc.cluster.local:8086

grafana_admin_password: admin
grafana_admin_user: admin

jenkins_enable_metrics: true
jenkins_dsl_job_repo: "{{ project_repo.split('/')[-2] }}/{{ project_repo.split('/')[-1] |  replace('.git', '') }}"
jenkins_dsl_repo_branch: "{{ project_branch }}"
jenkins_load_seed_job: true

